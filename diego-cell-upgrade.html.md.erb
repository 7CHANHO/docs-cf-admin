---
title: Managing Diego Cell During an Upgrade
owner: Diego
---

Cloud Foundry supports rolling upgrades in high availability environments. A rolling upgrade means that you can continue to operate an existing Cloud Foundry deployment and its running app instances while upgrading the platform.

<p class="note"><strong>Note</strong>: Rolling upgrade is not be available in your deployment if you have not configured your deployment to be highly available. See [High Availability in Cloud Foundry](../../high-availability.html).
</p>

## <a id="process"></a> Diego Cell Upgrade Process

To upgrade Cloud Foundry, BOSH must drain all Diego cell VMs that host app instances. BOSH manages this process by upgrading a batch of cells at a time. 

The number of cells that undergo upgrade simultaneously (either in a state of shutting down or coming back online) is controlled by the `max_in_flight` value of the Diego cell job. For example, if `max_in_flight` is set to `10%` and your deployment has 20 Diego cell job instances, then the maximum number of cells that BOSH can upgrade at a single time is `2`. 

When BOSH triggers an upgrade, each Diego cell undergoing upgrade enters "evacuation" mode. Evacuation mode means that the cell stops accepting new work and signals the rest of the Diego system to schedule replacements for its app instances. This scheduling is managed by the [Diego auctioneer process](./diego-auction.html).

Cell continues to react with the Diego system as replacements come online. The cell undergoing upgrade waits either either its app instance replacements to run successfully before shutting down the original local instances, or for the evacuation process to timeout. The limit to this wait period, known as the "evacuation timeout", defaults to 10 minutes. If cell evacuation exceeds this timeout, then the cell shuts down and all its rescheduled app instance requests are marked as unclaimed. The Diego system continues to re-emit start requests for the app replacements.

## <a id="limitations-considerations"></a> Preventing Overload 

A potential issue arises if too many app instance replacements are slow to start or do not start successfully at all. 

If too many app instances are started at once, then the load of these starts on the rest of the system can cause other applications that are already running to crash and be rescheduled.

To prevent overload, Cloud Foundry provides two major throttle configurations:

- The starting_container_count_maximum, or the overall limit to the number of containers that Diego can start in Cloud Foundry. This is a deployment-wide limit. The default value and ability to override this configuration depends on the version of Cloud Foundry deployed. 
<%= vars.starting_container_count_maximum %>

- The `max_in_flight` setting for the Diego cell job configured on your Director VM. This configuration, expressed as a percentage or an integer, sets the maximum number of job instances that can be upgraded simultaneously.
<%= vars.max_in_flight_config %>
